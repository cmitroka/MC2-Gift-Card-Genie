	Timer t1;
	WebComm wc1;
	Timer wc1Tmr;

	private void CheckConnected()
	{
		wc1 = new WebComm(AppSpecific.gloxmlns);
		String pWCParams = "";
		String pWCURL=AppSpecific.gloWebServiceURL + "/IsConnected";
		wc1.ExecuteWebRequest(pWCURL,pWCParams);
		GetWC1();
	}
	private void GetWC1()
	{
		wc1Cnt=0;
		wc1Tmr=new Timer();
		wc1Tmr.scheduleAtFixedRate(new TimerTask() {
			public void run() {
				runOnUiThread(new Runnable() {
					public void run() {
						wc1Cnt++;
						Log.d("APP", String.valueOf(wc1Tmr));
						if (wc1Cnt > 10) {
							//timed out
							wc1Tmr.cancel();
							Log.d("APP", "Timed Out");
							ShowIssue("We couldn't talk to our server for 10 seconds, so you may be offline or we're rebooting.  You can still use the app, but it may be limited.");
						} else if (!wc1.wcWebResponse.equals("...")) {
							wc1Tmr.cancel();
							Log.d("APP", "Theres a Response");
							if (!wc1.wcWebResponse.equals("1")) {
								ShowIssue("There was an issue talking to our server, so you may be offline or we're rebooting.  You can still use the app, but it may be limited.");
							}
						}
					}
				});
			}
		}, 0, 1000); // 1000 means start delay (1 sec), and the second is the loop delay.
	}
	private void ShowIssue(String pMsg)
	{
		try {
			AlertDialog.Builder alert = new AlertDialog.Builder(this);
			alert.setTitle("Oops");
			alert.setMessage(pMsg);
			alert.setPositiveButton("OK", new DialogInterface.OnClickListener() {
				public void onClick(DialogInterface dialog, int whichButton) {

				}
			});
			alert.show();
		}
		catch (Exception Ex)
		{

		}
	}
