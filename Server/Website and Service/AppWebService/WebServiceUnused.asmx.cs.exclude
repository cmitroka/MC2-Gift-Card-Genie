using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Services;
using System.Data.OleDb;
using System.IO;

namespace AppWebService
{
    /// <summary>
    /// Summary description for WebServiceUnused
    /// </summary>
    [WebService(Namespace = "http://tempuri.org/")]
    [WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]
    [System.ComponentModel.ToolboxItem(false)]
    // To allow this Web Service to be called from script, using ASP.NET AJAX, uncomment the following line. 
    // [System.Web.Script.Services.ScriptService]
    public class WebServiceUnused : System.Web.Services.WebService
    {
        [WebMethod(Description = @"")]
        public string AnswerCAPTCHA(string pUUID, string pIDFileName, string pAnswer)
        {
            BusinessLogic bl = new BusinessLogic();
            string retVal = bl.ContinueRequest(pUUID, pIDFileName, pAnswer);
            return retVal;
        }
        [WebMethod(Description = @"")]
        public string SendAdditionalInfo(string pUUID, string pIDFileName, string pInfo)
        {
            BusinessLogic bl = new BusinessLogic();
            string retVal = bl.ContinueRequest(pUUID, pIDFileName, pInfo);
            return retVal;
        }
        [WebMethod]
        public string HelloWorld()
        {
            return "Hello World";
        }
        [WebMethod]
        public string GetDownloadCount()
        {
            string retVal = "";
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            System.Data.DataSet ds = new System.Data.DataSet();
            OleDbConnection aConnection = GetOleDbConnection();
            try
            {
                aConnection.Open();
            }
            catch (Exception ex)
            {
                retVal = ex.Message;
                return retVal;
            }

            try
            {
                OleDbDataAdapter da = new OleDbDataAdapter("SELECT Count(A.UDID) AS CountOfUDID FROM (SELECT tblUserLog.UDID FROM tblUserLog GROUP BY tblUserLog.UDID)  AS A", aConnection);
                da.Fill(ds, "RandomData");
                foreach (System.Data.DataRow dr in ds.Tables["RandomData"].Rows)
                {
                    //System.Console.WriteLine("{0}", dr["firstName"]);
                    retVal = dr["CountOfUDID"].ToString();
                }
            }
            catch (Exception ex)
            {
                retVal = ex.Message;
                return retVal;
            }
            return retVal;
        }


        [WebMethod]
        public string VerifyLookup()
        {
            string retVal = "";
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            System.Data.DataSet ds = new System.Data.DataSet();
            OleDbConnection aConnection = GetOleDbConnection();
            try
            {
                aConnection.Open();
            }
            catch (Exception ex)
            {
                retVal = ex.Message;
                return retVal;
            }

            try
            {
                OleDbDataAdapter da = new OleDbDataAdapter("Select * from tblSystemParams where Key='SystemMessage'", aConnection);
                da.Fill(ds, "RandomData");
                foreach (System.Data.DataRow dr in ds.Tables["RandomData"].Rows)
                {
                    //System.Console.WriteLine("{0}", dr["firstName"]);
                    retVal = dr["Value"].ToString();
                }
            }
            catch (Exception ex)
            {
                retVal = ex.Message;
                return retVal;
            }
            return retVal;
        }


        [WebMethod]
        public byte[] returnTestImage(string pathToImage)
        {
            //SqlConnection con = new SqlConnection(@"Data Source=.\;Initial Catalog=testdb;Integrated Security=True");
            //con.Open();
            //SqlCommand com = new SqlCommand("select ImageCol from Images where IDCol = 1", con);
            //return (byte[])com.ExecuteScalar();
            pathToImage = @"C:\testCaptcha.bmp";
            FileStream fs = new FileStream(pathToImage, FileMode.Open, FileAccess.Read);
            BinaryReader br = new BinaryReader(fs);
            byte[] image = br.ReadBytes((int)fs.Length);
            br.Close();
            fs.Close();
            return image;
        }
        [WebMethod]
        public string GetMerchantInfo(string merchantNameIn)
        {
            string retVal = "";
            string tempLine = "";
            const string delim1 = "@#@";
            const string delim2 = "~-~";
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            System.Data.DataSet ds = new System.Data.DataSet();
            OleDbConnection aConnection = GetOleDbConnection();
            try
            {
                aConnection.Open();
            }
            catch (Exception ex)
            {
                retVal = ex.Message;
                return retVal;
            }

            try
            {
                OleDbDataAdapter da = new OleDbDataAdapter("Select * from tblMerchants where CleanName='" + merchantNameIn + "'", aConnection);
                da.Fill(ds, "RandomData");
                foreach (System.Data.DataRow dr in ds.Tables["RandomData"].Rows)
                {
                    //System.Console.WriteLine("{0}", dr["firstName"]);
                    tempLine = dr["CleanName"].ToString() + delim1 + dr["CleanPhone"].ToString() + delim1 + dr["URL"].ToString() + dr["ShowCardNum"].ToString() + dr["ShowCardPIN"].ToString() + dr["ShowCreds"].ToString();
                    sb.Append(tempLine);
                }
            }
            catch (OleDbException ex)
            {
                retVal = ex.Message;
                return retVal;
            }
            retVal = sb.ToString();
            return retVal;
        }
        [WebMethod]
        public AppWebService.Merchant GetMerchantInfoV2(string merchantNameIn)
        {
            AppWebService.Merchant m = new Merchant();
            m.MerchantName = merchantNameIn;
            System.Data.DataSet ds = new System.Data.DataSet();
            OleDbConnection aConnection = GetOleDbConnection();
            try
            {
                aConnection.Open();
            }
            catch (Exception ex)
            {
                return null;
            }

            try
            {
                OleDbDataAdapter da = new OleDbDataAdapter("Select * from tblMerchants where CleanName='" + merchantNameIn + "'", aConnection);
                da.Fill(ds, "RandomData");
                foreach (System.Data.DataRow dr in ds.Tables["RandomData"].Rows)
                {
                    //System.Console.WriteLine("{0}", dr["firstName"]);
                    m.MerchantPhone = dr["CleanPhone"].ToString();
                    m.MerchantURL = dr["URL"].ToString();
                    m.ShowCardNum = Convert.ToBoolean(dr["ShowCardNum"].ToString());
                    m.ShowCardPIN = Convert.ToBoolean(dr["ShowCardPIN"].ToString());
                    m.ShowCreds = Convert.ToBoolean(dr["ShowCreds"].ToString());
                    if (m.ShowCardNum == true || m.ShowCardPIN == true || m.ShowCreds == true)
                    {
                        m.IsAutoLookup = true;
                    }
                }
            }
            catch (OleDbException ex)
            {
                //retVal = ex.Message;
                return null;
            }
            return m;
        }
        [WebMethod(Description = "public string DownloadMerchants(bool isAutoLookupOnly)<br>1-800-PetSupplies~-~1800Flowers~-~")]
        public string DownloadMerchants(bool isAutoLookupOnly)
        {
            string mySQL = "";
            string retVal = "";

            string tempLine = "";
            const string delim1 = "@#@";
            const string delim2 = "~-~";
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            System.Data.DataSet ds = new System.Data.DataSet();
            OleDbConnection aConnection = GetOleDbConnection();
            try
            {
                aConnection.Open();
            }
            catch (Exception ex)
            {
                retVal = ex.Message;
                return retVal;
            }

            try
            {
                if (isAutoLookupOnly == false)
                {
                    mySQL = "Select CleanName  from tblMerchants";
                }
                else
                {
                    mySQL = "SELECT CleanName FROM tblMerchants WHERE (showCardPIN = true) OR (showCreds = true) OR (showCardNum = true)";
                }
                OleDbDataAdapter da = new OleDbDataAdapter(mySQL, aConnection);
                da.Fill(ds, "RandomData");
                foreach (System.Data.DataRow dr in ds.Tables["RandomData"].Rows)
                {
                    //System.Console.WriteLine("{0}", dr["firstName"]);
                    //bool ShowCardNum = Convert.ToBoolean(dr["ShowCardNum"].ToString());
                    //bool ShowCardPIN = Convert.ToBoolean(dr["ShowCardPIN"].ToString());
                    //bool ShowCreds = Convert.ToBoolean(dr["ShowCreds"].ToString());
                    tempLine = dr["CleanName"].ToString() + delim2;
                    sb.Append(tempLine);
                }
            }
            catch (OleDbException ex)
            {
                retVal = ex.Message;
                return retVal;
            }
            retVal = sb.ToString();
            return retVal;
        }
        [WebMethod]
        public string[] DownloadMerchantsV2()
        {
            string[] retVal;
            List<string> ls = new List<string>(); ;
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            System.Data.DataSet ds = new System.Data.DataSet();
            OleDbConnection aConnection = GetOleDbConnection();
            try
            {
                aConnection.Open();
            }
            catch (Exception ex)
            {
                return null;
            }
            try
            {
                OleDbDataAdapter da = new OleDbDataAdapter("Select * from tblMerchants", aConnection);
                da.Fill(ds, "RandomData");
                foreach (System.Data.DataRow dr in ds.Tables["RandomData"].Rows)
                {
                    ls.Add(dr["CleanName"].ToString());
                }
                retVal = ls.ToArray();
            }
            catch (OleDbException ex)
            {
                //retVal = ex.Message;
                return null;
            }
            //retVal = sb.ToString();
            return retVal;
        }

        [WebMethod]        
        private string ReturnData()
        {
            string retVal = "";
            OleDbConnection aConnection = GetOleDbConnection();
            try
            {
                aConnection.Open();
            }
            catch (Exception ex)
            {
                retVal = ex.Message;
                return retVal;
            }
            OleDbCommand NamesCommand = new OleDbCommand("SELECT * FROM tblMerchants;", aConnection);
            OleDbDataReader dr = NamesCommand.ExecuteReader();

            string theColumns = "";
            for (int column = 0; column < dr.FieldCount; column++)
            {
                theColumns += dr.GetName(column) + " | ";
            }
            retVal = theColumns;

            aConnection.Close();
            return retVal;
        }
    }

}
